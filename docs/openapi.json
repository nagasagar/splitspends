{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "OpenAPI definition",
    "version" : "v0"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Generated server url"
  } ],
  "paths" : {
    "/api/users/{userId}" : {
      "get" : {
        "tags" : [ "user-controller" ],
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user-controller" ],
        "operationId" : "updateUserProfile",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProfileUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/reactivate" : {
      "put" : {
        "tags" : [ "user-controller" ],
        "operationId" : "reactivateUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/deactivate" : {
      "put" : {
        "tags" : [ "user-controller" ],
        "operationId" : "deactivateUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/{settlementId}/reject" : {
      "put" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "rejectSettlement",
        "parameters" : [ {
          "name" : "settlementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettlementRejectRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettlementResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/{settlementId}/confirm" : {
      "put" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "confirmSettlement",
        "parameters" : [ {
          "name" : "settlementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettlementConfirmRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettlementResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notificationId}/read" : {
      "put" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "markAsRead",
        "parameters" : [ {
          "name" : "notificationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/user/{userId}/read-all" : {
      "put" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "markAllAsRead",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "group-controller" ],
        "operationId" : "updateGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "group-controller" ],
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "deletedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/groups/{groupId}/settings" : {
      "put" : {
        "tags" : [ "group-controller" ],
        "operationId" : "updateGroupSettings",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupSettingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/reactivate" : {
      "put" : {
        "tags" : [ "group-controller" ],
        "operationId" : "reactivateGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "reactivatedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}/promote" : {
      "put" : {
        "tags" : [ "group-controller" ],
        "operationId" : "promoteToAdmin",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "promotedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}/demote" : {
      "put" : {
        "tags" : [ "group-controller" ],
        "operationId" : "demoteAdmin",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "demotedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/archive" : {
      "put" : {
        "tags" : [ "group-controller" ],
        "operationId" : "archiveGroup",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "archivedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/{expenseId}" : {
      "put" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "updateExpense",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "amount",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "category",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "FOOD_DRINKS", "TRANSPORTATION", "ACCOMMODATION", "ENTERTAINMENT", "SHOPPING", "UTILITIES", "HEALTHCARE", "EDUCATION", "TRAVEL", "GROCERIES", "RESTAURANTS", "GAS", "PARKING", "OTHER" ]
          }
        }, {
          "name" : "notes",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "updatedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Expense"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "deleteExpense",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "deletedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/v1/auth/verify-email" : {
      "post" : {
        "tags" : [ "email-verification-controller" ],
        "operationId" : "verifyEmail",
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/resend-verification" : {
      "post" : {
        "tags" : [ "email-verification-controller" ],
        "operationId" : "resendVerification",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements" : {
      "post" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "createSettlement",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettlementRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettlementResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/send-reminders" : {
      "post" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "sendSettlementReminders",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/notifications/cleanup" : {
      "post" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "deleteOldNotifications",
        "parameters" : [ {
          "name" : "daysOld",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/invitations" : {
      "post" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "sendInvitation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvitationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvitationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/{token}/decline" : {
      "post" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "declineInvitation",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "decliningUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "reason",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvitationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/{token}/accept" : {
      "post" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "acceptInvitation",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "acceptingUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvitationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/{invitationId}/cancel" : {
      "post" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "cancelInvitation",
        "parameters" : [ {
          "name" : "invitationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "cancelledByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/invitations/send-reminders" : {
      "post" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "sendInvitationReminders",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/invitations/expire-old" : {
      "post" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "expireOldInvitations",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/groups" : {
      "post" : {
        "tags" : [ "group-controller" ],
        "operationId" : "createGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/members" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getGroupMembers",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "group-controller" ],
        "operationId" : "addMembers",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "userIds",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }, {
          "name" : "addedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/image" : {
      "post" : {
        "tags" : [ "group-controller" ],
        "operationId" : "uploadGroupImage",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "uploadedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/group/{groupId}/share-split" : {
      "post" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "createExpenseWithShareSplits",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShareSplitRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Expense"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/group/{groupId}/percentage-split" : {
      "post" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "createExpenseWithPercentageSplits",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PercentageSplitRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Expense"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/group/{groupId}/equal-split" : {
      "post" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "createExpenseWithEqualSplits",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateExpenseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Expense"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/group/{groupId}/custom-split" : {
      "post" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "createExpenseWithCustomSplits",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomSplitRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Expense"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signup" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "signup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/google" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "googleLogin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GoogleAuthRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/expense/{expenseId}" : {
      "get" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "getExpenseAttachments",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "uploadFile",
        "parameters" : [ {
          "name" : "expenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "uploadedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                },
                "required" : [ "file" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/cleanup" : {
      "post" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "cleanupDeletedFiles",
        "parameters" : [ {
          "name" : "daysOld",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 30
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/users/{userId}/stats" : {
      "get" : {
        "tags" : [ "user-controller" ],
        "operationId" : "getUserStats",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/search" : {
      "get" : {
        "tags" : [ "user-controller" ],
        "operationId" : "searchUsers",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/email/{email}" : {
      "get" : {
        "tags" : [ "user-controller" ],
        "operationId" : "getUserByEmail",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test" : {
      "get" : {
        "tags" : [ "test-controller" ],
        "operationId" : "test",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/{settlementId}" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getSettlement",
        "parameters" : [ {
          "name" : "settlementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettlementResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/user/{userId}/total-settled" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getTotalAmountSettledByUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "number"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/user/{userId}/pending" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getPendingSettlements",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettlementResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/user/{userId}/pending-amount" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getPendingAmountByUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "number"
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/user/{userId}/history" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getUserSettlementHistory",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettlementResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/group/{groupId}" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getGroupSettlements",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettlementResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/group/{groupId}/recent" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getRecentSettlements",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettlementResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settlements/group/{groupId}/between" : {
      "get" : {
        "tags" : [ "settle-up-controller" ],
        "operationId" : "getSettlementsBetweenUsers",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "user1Id",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "user2Id",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettlementResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/user/{userId}" : {
      "get" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "getUserNotifications",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "unreadOnly",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/user/{userId}/unread-count" : {
      "get" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "getUnreadCount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/user/{userId}/paginated" : {
      "get" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "getUserNotificationsPaginated",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageNotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/user/{userId}/high-priority" : {
      "get" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "getHighPriorityNotifications",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/user/{userId}/activity-feed" : {
      "get" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "getActivityFeedNotifications",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "days",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 7
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/user/{userId}" : {
      "get" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "getUserInvitations",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvitationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/user/{userId}/sent" : {
      "get" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "getInvitationsSentByUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvitationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/user/{userId}/pending" : {
      "get" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "getPendingInvitations",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvitationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/token/{token}" : {
      "get" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "getInvitationByToken",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvitationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/token/{token}/valid" : {
      "get" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "isInvitationValid",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/group/{groupId}" : {
      "get" : {
        "tags" : [ "invitation-controller" ],
        "operationId" : "getGroupInvitations",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvitationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/stats" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getGroupStats",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/invitation-candidates" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getUsersForInvitation",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "searchQuery",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/balances" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getGroupBalances",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserBalance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/admins" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getGroupAdmins",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/user/{userId}" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getUserGroups",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/user/{userId}/created" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "getGroupsCreatedByUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/search" : {
      "get" : {
        "tags" : [ "group-controller" ],
        "operationId" : "searchPublicGroups",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/user/{userId}" : {
      "get" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "getUserExpenses",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Expense"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/user/{userId}/stats" : {
      "get" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "getUserExpenseStats",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExpenseStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/group/{groupId}" : {
      "get" : {
        "tags" : [ "expense-controller" ],
        "operationId" : "getGroupExpenses",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Expense"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "getAttachment",
        "parameters" : [ {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "deleteAttachment",
        "parameters" : [ {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "deletedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/attachments/{attachmentId}/download" : {
      "get" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "downloadFile",
        "parameters" : [ {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "requestingUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/user/{userId}" : {
      "get" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "getUserAttachments",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/user/{userId}/storage-used" : {
      "get" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "getTotalStorageUsedByUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/type/{attachmentType}" : {
      "get" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "getAttachmentsByType",
        "parameters" : [ {
          "name" : "attachmentType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "RECEIPT_IMAGE", "DOCUMENT_IMAGE", "PDF_DOCUMENT", "INVOICE", "CONTRACT", "OTHER" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/duplicates/{checksum}" : {
      "get" : {
        "tags" : [ "attachment-controller" ],
        "operationId" : "findDuplicateFiles",
        "parameters" : [ {
          "name" : "checksum",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notificationId}" : {
      "delete" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "deleteNotification",
        "parameters" : [ {
          "name" : "notificationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/groups/{groupId}/members/{userId}" : {
      "delete" : {
        "tags" : [ "group-controller" ],
        "operationId" : "removeMember",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "removedByUserId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserProfileUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "phoneNumber" : {
            "type" : "string",
            "maxLength" : 20,
            "minLength" : 0
          },
          "profilePictureUrl" : {
            "type" : "string",
            "maxLength" : 500,
            "minLength" : 0
          }
        }
      },
      "UserResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "profilePictureUrl" : {
            "type" : "string"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastLoginAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SettlementRejectRequest" : {
        "type" : "object",
        "properties" : {
          "rejectingUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "reason" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          }
        },
        "required" : [ "rejectingUserId" ]
      },
      "GroupResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "defaultCurrency" : {
            "type" : "string"
          },
          "privacyLevel" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "SECRET" ]
          },
          "invitationPolicy" : {
            "type" : "string",
            "enum" : [ "CREATOR_ONLY", "ADMIN_ONLY", "ALL_MEMBERS" ]
          },
          "allowExternalPayments" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "ARCHIVED", "DELETED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            },
            "uniqueItems" : true
          },
          "admins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserResponse"
            },
            "uniqueItems" : true
          },
          "groupImageUrl" : {
            "type" : "string"
          }
        }
      },
      "SettlementResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "group" : {
            "$ref" : "#/components/schemas/GroupResponse"
          },
          "payer" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "payee" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "amount" : {
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "paymentMethod" : {
            "type" : "string",
            "enum" : [ "CASH", "UPI" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "CONFIRMED", "IN_PROGRESS", "COMPLETED", "REJECTED", "CANCELLED" ]
          },
          "transactionId" : {
            "type" : "string"
          },
          "rejectionReason" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "confirmedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "rejectedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "confirmedBy" : {
            "$ref" : "#/components/schemas/UserResponse"
          }
        }
      },
      "SettlementConfirmRequest" : {
        "type" : "object",
        "properties" : {
          "confirmingUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionId" : {
            "type" : "string"
          }
        },
        "required" : [ "confirmingUserId" ]
      },
      "NotificationResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "recipient" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "title" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "EXPENSE_ADDED", "EXPENSE_UPDATED", "EXPENSE_DELETED", "SETTLEMENT_REQUEST", "SETTLEMENT_REQUESTED", "SETTLEMENT_CONFIRMED", "SETTLEMENT_REMINDER", "SETTLEMENT_COMPLETED", "SETTLEMENT_REJECTED", "GROUP_INVITATION", "GROUP_MEMBER_ADDED", "MEMBER_ADDED", "MEMBER_REMOVED", "GROUP_UPDATED", "BALANCE_REMINDER", "PAYMENT_DUE", "SYSTEM_UPDATE", "WELCOME" ]
          },
          "priority" : {
            "type" : "string",
            "enum" : [ "LOW", "NORMAL", "HIGH", "URGENT" ]
          },
          "isRead" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiresAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "metadata" : {
            "type" : "string"
          }
        }
      },
      "GroupRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "description" : {
            "type" : "string",
            "maxLength" : 500,
            "minLength" : 0
          },
          "createdByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "updatedByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "privacyLevel" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE", "SECRET" ]
          },
          "defaultCurrency" : {
            "type" : "string",
            "maxLength" : 3,
            "minLength" : 3
          }
        },
        "required" : [ "createdByUserId", "defaultCurrency", "name" ]
      },
      "GroupSettingsRequest" : {
        "type" : "object",
        "properties" : {
          "updatedByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "invitationPolicy" : {
            "type" : "string",
            "enum" : [ "CREATOR_ONLY", "ADMIN_ONLY", "ALL_MEMBERS" ]
          },
          "autoSettleThreshold" : {
            "type" : "number"
          },
          "allowExternalPayments" : {
            "type" : "boolean"
          }
        },
        "required" : [ "updatedByUserId" ]
      },
      "Attachment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "originalFilename" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "storedFilename" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "filePath" : {
            "type" : "string",
            "maxLength" : 500,
            "minLength" : 0
          },
          "fileUrl" : {
            "type" : "string"
          },
          "fileSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "contentType" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "attachmentType" : {
            "type" : "string",
            "enum" : [ "RECEIPT_IMAGE", "DOCUMENT_IMAGE", "PDF_DOCUMENT", "INVOICE", "CONTRACT", "OTHER" ]
          },
          "description" : {
            "type" : "string",
            "maxLength" : 500,
            "minLength" : 0
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "imageWidth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "imageHeight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fileChecksum" : {
            "type" : "string"
          },
          "storageProvider" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "fileExtension" : {
            "type" : "string"
          },
          "formattedFileSize" : {
            "type" : "string"
          },
          "image" : {
            "type" : "boolean"
          },
          "allowedFileType" : {
            "type" : "boolean"
          },
          "pdf" : {
            "type" : "boolean"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "thumbnailUrl" : {
            "type" : "string"
          }
        },
        "required" : [ "contentType", "filePath", "originalFilename", "storedFilename" ]
      },
      "Expense" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 500,
            "minLength" : 1
          },
          "amount" : {
            "type" : "number",
            "minimum" : 0.01
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attachmentUrl" : {
            "type" : "string"
          },
          "attachmentFilename" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "FOOD_DRINKS", "TRANSPORTATION", "ACCOMMODATION", "ENTERTAINMENT", "SHOPPING", "UTILITIES", "HEALTHCARE", "EDUCATION", "TRAVEL", "GROCERIES", "RESTAURANTS", "GAS", "PARKING", "OTHER" ]
          },
          "currency" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "CONFIRMED", "CANCELLED", "DELETED" ]
          },
          "notes" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "participantCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "formattedAmount" : {
            "type" : "string"
          },
          "fullySettled" : {
            "type" : "boolean"
          },
          "activeAttachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            },
            "uniqueItems" : true
          },
          "totalSplitAmount" : {
            "type" : "number"
          },
          "splitAmountValid" : {
            "type" : "boolean"
          },
          "ageInDays" : {
            "type" : "integer",
            "format" : "int64"
          },
          "unsettledAmount" : {
            "type" : "number"
          }
        },
        "required" : [ "amount", "date", "description" ]
      },
      "SettlementRequest" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "payerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "payeeId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amount" : {
            "type" : "number",
            "minimum" : 0.01
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 0
          },
          "paymentMethod" : {
            "type" : "string",
            "enum" : [ "CASH", "UPI" ]
          }
        },
        "required" : [ "amount", "description", "groupId", "payeeId", "payerId", "paymentMethod" ]
      },
      "InvitationRequest" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "email" : {
            "type" : "string",
            "minLength" : 1
          },
          "invitedByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "personalMessage" : {
            "type" : "string",
            "maxLength" : 500,
            "minLength" : 0
          }
        },
        "required" : [ "email", "groupId", "invitedByUserId" ]
      },
      "InvitationResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "group" : {
            "$ref" : "#/components/schemas/GroupResponse"
          },
          "email" : {
            "type" : "string"
          },
          "invitedName" : {
            "type" : "string"
          },
          "invitedBy" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "personalMessage" : {
            "type" : "string"
          },
          "invitationToken" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "ACCEPTED", "DECLINED", "EXPIRED", "CANCELLED" ]
          },
          "expiresAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "acceptedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "declinedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cancelledAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "acceptedBy" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "declineReason" : {
            "type" : "string"
          },
          "reminderCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastEmailSentAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ShareSplitRequest" : {
        "type" : "object",
        "properties" : {
          "paidByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "userShareMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "category" : {
            "type" : "string"
          }
        }
      },
      "PercentageSplitRequest" : {
        "type" : "object",
        "properties" : {
          "paidByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "userPercentageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number"
            }
          },
          "category" : {
            "type" : "string"
          }
        }
      },
      "CreateExpenseRequest" : {
        "type" : "object",
        "properties" : {
          "paidByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "participantUserIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "category" : {
            "type" : "string"
          }
        }
      },
      "CustomSplitRequest" : {
        "type" : "object",
        "properties" : {
          "paidByUserId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "userAmountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number"
            }
          },
          "category" : {
            "type" : "string"
          }
        }
      },
      "AuthRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "email" : {
            "type" : "string",
            "minLength" : 1
          },
          "password" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 8
          }
        },
        "required" : [ "email", "name", "password" ]
      },
      "AuthResponse" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "refreshToken" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "GoogleAuthRequest" : {
        "type" : "object",
        "properties" : {
          "idToken" : {
            "type" : "string"
          }
        }
      },
      "AttachmentResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "expenseId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "uploadedBy" : {
            "$ref" : "#/components/schemas/UserResponse"
          },
          "originalFilename" : {
            "type" : "string"
          },
          "storedFilename" : {
            "type" : "string"
          },
          "fileSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "contentType" : {
            "type" : "string"
          },
          "attachmentType" : {
            "type" : "string",
            "enum" : [ "RECEIPT_IMAGE", "DOCUMENT_IMAGE", "PDF_DOCUMENT", "INVOICE", "CONTRACT", "OTHER" ]
          },
          "description" : {
            "type" : "string"
          },
          "checksum" : {
            "type" : "string"
          },
          "storageProvider" : {
            "type" : "string"
          },
          "thumbnailUrl" : {
            "type" : "string"
          },
          "isDeleted" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PageNotificationResponse" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationResponse"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PageableObject" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paged" : {
            "type" : "boolean"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unpaged" : {
            "type" : "boolean"
          }
        }
      },
      "SortObject" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        }
      },
      "GroupStats" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "memberCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "adminCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalExpenses" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalAmount" : {
            "type" : "number"
          },
          "settledAmount" : {
            "type" : "number"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "unsettledAmount" : {
            "type" : "number"
          },
          "settlementPercentage" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "ActivityLog" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "CREATE", "UPDATE", "DELETE", "LOGIN", "LOGOUT", "REGISTER", "JOIN_GROUP", "LEAVE_GROUP", "ADD_MEMBER", "REMOVE_MEMBER", "PROMOTE_ADMIN", "DEMOTE_ADMIN", "SPLIT_EXPENSE", "SETTLE_EXPENSE", "REQUEST_SETTLEMENT", "ACCEPT_SETTLEMENT", "REJECT_SETTLEMENT", "COMPLETE", "SEND_INVITATION", "ACCEPT_INVITATION", "DECLINE_INVITATION", "UPLOAD_ATTACHMENT", "DOWNLOAD_ATTACHMENT", "DELETE_ATTACHMENT", "ARCHIVE", "RESTORE", "EXPORT", "CANCEL_INVITATION" ]
          },
          "entityType" : {
            "type" : "string",
            "enum" : [ "USER", "GROUP", "EXPENSE", "EXPENSE_SPLIT", "SETTLEMENT", "INVITATION", "NOTIFICATION", "ATTACHMENT" ]
          },
          "entityId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 500,
            "minLength" : 0
          },
          "targetUser" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 0
          },
          "details" : {
            "type" : "string",
            "maxLength" : 200,
            "minLength" : 0
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : { }
          },
          "ipAddress" : {
            "type" : "string"
          },
          "userAgent" : {
            "type" : "string"
          },
          "sessionId" : {
            "type" : "string"
          },
          "formattedDescription" : {
            "type" : "string"
          },
          "ageInMinutes" : {
            "type" : "integer",
            "format" : "int64"
          },
          "recent" : {
            "type" : "boolean"
          },
          "relativeTime" : {
            "type" : "string"
          }
        },
        "required" : [ "description" ]
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "minLength" : 2
          },
          "email" : {
            "type" : "string",
            "minLength" : 1
          },
          "passwordHash" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string",
            "pattern" : "^\\+?[1-9]\\d{1,14}$"
          },
          "profilePictureUrl" : {
            "type" : "string"
          },
          "googleId" : {
            "type" : "string"
          },
          "emailVerified" : {
            "type" : "boolean"
          },
          "accountStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "SUSPENDED", "INACTIVE", "DELETED", "PENDING_VERIFICATION" ]
          },
          "lastLoginAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "emailVerificationSentAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "preferredCurrency" : {
            "type" : "string",
            "pattern" : "^[A-Z]{3}$"
          },
          "emailNotifications" : {
            "type" : "boolean"
          },
          "pushNotifications" : {
            "type" : "boolean"
          },
          "paymentReminders" : {
            "type" : "boolean"
          },
          "timezone" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          },
          "joinedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "active" : {
            "type" : "boolean"
          },
          "displayName" : {
            "type" : "string"
          },
          "googleUser" : {
            "type" : "boolean"
          },
          "verified" : {
            "type" : "boolean"
          },
          "username" : {
            "type" : "string"
          },
          "unreadNotificationsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pendingSettlementsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "recentActivityLogs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityLog"
            },
            "uniqueItems" : true
          }
        },
        "required" : [ "email", "name" ]
      },
      "UserBalance" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "totalPaid" : {
            "type" : "number"
          },
          "totalOwed" : {
            "type" : "number"
          },
          "netBalance" : {
            "type" : "number"
          },
          "absoluteBalance" : {
            "type" : "number"
          },
          "owedByGroup" : {
            "type" : "boolean"
          }
        }
      },
      "ExpenseStats" : {
        "type" : "object",
        "properties" : {
          "totalExpenses" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalAmount" : {
            "type" : "number"
          },
          "settledAmount" : {
            "type" : "number"
          },
          "averageExpenseAmount" : {
            "type" : "number"
          },
          "unsettledAmount" : {
            "type" : "number"
          },
          "settlementPercentage" : {
            "type" : "number",
            "format" : "double"
          }
        }
      }
    }
  }
}